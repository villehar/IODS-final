install.packages("rmarkdown")
Data14 = read.csv(file = "data/learning2014.csv", header = TRUE)
Data14 <- Data14[,c(4,1,2,3,5,6,7)]
dim(Data14)
str(Data14)
library(GGally)
install.packages("GGally")
library(GGally)
library(ggplot2)
explorative_plot <- ggpairs(Data14, mapping = aes(col = gender), lower = list(combo = wrap("facethist", bins = 20)))
explorative_plot
explorative_plot
model1 <- lm(Points ~ Attitude + stra + surf, data = Data14)
summary(model1)
model2 <- lm(Points ~ Attitude, data = Data14)
summary(model2)
par(mfrow = c(2,2))
plot(model2, which = c(1,2,5))
length(unique(unfair.resp$pp))
unfair.resp = read.csv(file = "responder.csv", header = TRUE)
str(unfair.resp)
length(unique(unfair.resp$pp))
unfair$pp_sex <- as.numeric(unfair$pp_sex)
unfair <- unfair.resp
unfair$pp_sex <- as.numeric(unfair$pp_sex)
agg.accept <- aggregate(unfair, by=list(unfair$pp), FUN=mean)
summary(unfair[1:2])
agg.unfair <- aggregate(unfair, by=list(unfair$pp), FUN=mean)
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n(), gender = mean(pp_sex))
library(dplyr)
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n(), gender = mean(pp_sex))
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n())
unfair <- unfair.resp
agg.unfair <- aggregate(unfair, by=list(unfair$pp), FUN=mean)
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n())
unfair <- unfair.resp
unfair$pp_sex <- as.numeric(unfair$pp_sex)
agg.unfair <- aggregate(unfair[1:2], by=list(unfair$pp), FUN=mean)
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n())
setwd("C:/Users/harjunv1/Desktop/GitHub/IODS-final")
unfair.resp = read.csv(file = "Data/responder.csv", header = TRUE)
str(unfair.resp)
library(dplyr)
unfair <- unfair.resp
unfair$pp_sex <- as.numeric(unfair$pp_sex)
agg.unfair <- aggregate(unfair[1:2], by=list(unfair$pp), FUN=mean)
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n())
summary(unfair.resp)
library(tidyr)
library(GGally)
library(ggplot2)
unfair_small <- unfair.resp[,c(16,10,12,11,13)]
unfair_small$accept <- as.factor(unfair_small$accept)
explorative_plot <- ggpairs(unfair_small, title = "Distribution and associations of the ultimatum data", mapping = aes(color = unfairness), lower=list(combo=wrap("facethist",binwidth=10)))
explorative_plot
unfair.resp %>% select(unfairness, emo, touch, accept, RT) %>% group_by(touch, emo) %>% summarise(count = n(), RT_in_ms = mean(RT), proportion_of_acceptances = (mean(accept))*100)
# defining the logistic regression model
naive <- glm(accept ~ unfairness + emo + touch, data = unfair.resp, family = "binomial")
# printing out model summary
summary(naive)
# transforming the coefficients to odd ratios
OR <- coef(naive) %>% exp
# calculating the confidential intervals for the odd rations
CI <- confint(naive) %>% exp
# printing out the OR results
cbind(OR, CI)
# defining the logistic regression model with emo*touch interaction
naive2 <- glm(accept ~ unfairness + emo + touch + emo:touch, data = unfair.resp, family = "binomial")
# printing out model summary
summary(naive2)
anova(naive, naive2, test ="Chisq")
library(geepack)
install.packages("geepack")
unfair.resp = read.csv(file = "Data/responder.csv", header = TRUE)
str(unfair.resp)
library(dplyr)
unfair <- unfair.resp
unfair$pp_sex <- as.numeric(unfair$pp_sex)
agg.unfair <- aggregate(unfair[1:2], by=list(unfair$pp), FUN=mean)
agg.unfair %>% select(pp, pp_sex) %>% group_by(pp_sex) %>% summarise(count = n())
summary(unfair.resp)
library(tidyr)
library(GGally)
library(ggplot2)
unfair_small <- unfair.resp[,c(16,10,12,11,13)]
unfair_small$accept <- as.factor(unfair_small$accept)
explorative_plot <- ggpairs(unfair_small, title = "Distribution and associations of the ultimatum data", mapping = aes(color = unfairness), lower=list(combo=wrap("facethist",binwidth=10)))
explorative_plot
unfair.resp %>% select(unfairness, emo, touch, accept, RT) %>% group_by(touch, emo) %>% summarise(count = n(), RT_in_ms = mean(RT), proportion_of_acceptances = (mean(accept))*100)
# defining the logistic regression model
naive <- glm(accept ~ unfairness + emo + touch, data = unfair.resp, family = "binomial")
# printing out model summary
summary(naive)
# transforming the coefficients to odd ratios
OR <- coef(naive) %>% exp
# calculating the confidential intervals for the odd rations
CI <- confint(naive) %>% exp
# printing out the OR results
cbind(OR, CI)
# defining the logistic regression model with emo*touch interaction
naive2 <- glm(accept ~ unfairness + emo + touch + emo:touch, data = unfair.resp, family = "binomial")
# printing out model summary
summary(naive2)
anova(naive, naive2, test ="Chisq")
library(geepack)
mf <- formula(accept ~ unfairness + emo + touch)
gee_exh <- geeglm(mf, data=unfair.resp, id = pp, family="binomial",corstr="exchangeable")
summary(gee_exh)
mf <- formula(accept ~ unfairness + emo + touch)
gee_ar1 <- geeglm(mf, data=unfair.resp, id = pp, family="binomial",corstr="ar1")
summary(gee_ar1)
# calculating the odd ratios
OR <- coef(gee_ar1) %>% exp
# calculating the confidential intervals for the odd rations
cc <- coef(summary(gee_ar1))
citab <- with(as.data.frame(cc),
cbind(lwr=Estimate-1.96*Std.err,
upr=Estimate+1.96*Std.err))
CI <- citab %>% exp
# printing out the OR results
cbind(OR, CI)
